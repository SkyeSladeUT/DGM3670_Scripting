{
	global string $GetAllField, $GetIndivField, $GetRotField;
	
	global proc GetCenters(int $CenterofAll, int $CenterofInd, int $OrientationOn){
		print($CenterofAll + " " + $CenterofInd + " " + $OrientationOn);
	    string $objects[] = `ls -sl`;
	    if(!size($objects)){
		    error ("must select an object");
		}
		float $xPos = 0, $yPos = 0, $zPos = 0, $xTotal = 0, $yTotal = 0, $zTotal = 0, $xRot = 0, $yRot = 0, $zRot = 0;
		float $bounding[], $rotation[];
		string $CenterIndGroup, $ObjectName, $obj;
		int $numberofObjects = 0, $tokens, $begin, $end;
		string $locator[], $words[], $words2[];
		if($CenterofInd){
		    print("Create Group");
			$CenterIndGroup = `group -em -n "Individual_Locators"`;
		}
		for($i = 0; $i < size($objects); $i++){
			tokenize $objects[$i] "[" $words;
			$ObjectName = $words[0];
			$tokens = `tokenize $objects[$i] ":" $words`;
			if($tokens > 1){
				tokenize $words[0] "[" $words2;
				$begin = (int)$words2[1];
				tokenize $words[1] "]" $words2;
				$end = (int)$words2[0];
				for($j = $begin; $j <= $end; $j++){
					$obj = $ObjectName + "[" + $j + "]";
					$bounding = `xform -q -ws -boundingBox $obj`;
					$rotation = `xform -q -ws -rotation $obj`;
					$xRot += $rotation[0];
					$yRot += $rotation[1];
					$zRot += $rotation[2];
					$xPos = (($bounding[0] + $bounding[3])/2);
					$yPos = (($bounding[1] + $bounding[4])/2);
					$zPos = (($bounding[2] + $bounding[5])/2);
					$xTotal += $xPos;
					$yTotal += $yPos;
					$zTotal += $zPos;
					$numberofObjects++;
					if($CenterofInd){
						$locator = `spaceLocator`;
						move -ws $xPos $yPos $zPos $locator[0];
						if($OrientationOn){
							rotate -cp $rotation[0] $rotation[1] $rotation[2] $locator[0];
						}
						parent $locator $CenterIndGroup;
					}
				}						
            }
			else{
				$bounding = `xform -q -ws -boundingBox $objects[$i]`;
				$rotation = `xform -q -ws -rotation $objects[$i]`;
				$xRot += $rotation[0];
				$yRot += $rotation[1];
				$zRot += $rotation[2];
				$xPos = (($bounding[0] + $bounding[3])/2);
				$yPos = (($bounding[1] + $bounding[4])/2);
				$zPos = (($bounding[2] + $bounding[5])/2);
				$xTotal += $xPos;
				$yTotal += $yPos;
				$zTotal += $zPos;
				$numberofObjects++;
				if($CenterofInd){
					$locator = `spaceLocator`;
					move -ws $xPos $yPos $zPos $locator[0];
					if($OrientationOn){
						rotate -cp $rotation[0] $rotation[1] $rotation[2] $locator[0];
					}
					parent $locator $CenterIndGroup;
				}
			}
		}
		if($CenterofAll){
			$locator = `spaceLocator`;
			$xTotal = ($xTotal/$numberofObjects);
			$yTotal = ($yTotal/$numberofObjects);
			$zTotal = ($zTotal/$numberofObjects);
			move -ws $xTotal $yTotal $zTotal $locator[0];
			if($OrientationOn){
				rotate -cp $xRot $yRot $zRot $locator[0];
			}
		}
	}
	
	global proc CallFunc(){
		int $GetAll = `intField -q -value $GetAllField`;
		int $GetIndiv = `intField -q -value $GetIndivField`;
		int $GetRot = `intField -q -value $GetRotField`;
		GetCenters($GetAll, $GetIndiv, $GetRot);
	}
	
	global proc OpenWindow(){
		string $window;
		if(`window -exists $window`)
			deleteUI -window $window;
		$window = `window -t "Centering Script"`;
			string $column = `columnLayout -p $window`;
				string $frame1 = `frameLayout -p $column -collapsable false -label "Get Individual Centers"`;
					string $row1 = `rowLayout -p $frame1 -numberOfColumns 1`;
						$GetIndivField = `intField -p $row1 -minValue 0 -maxValue 1 -value 0`; 
				string $frame2 = `frameLayout -p $column -collapsable false -label "Get Center of All"`;
					string $row2 = `rowLayout -p $frame2 -numberOfColumns 1`;
						$GetAllField = `intField -p $row2 -minValue 0 -maxValue 1 -value 0`; 
				string $frame3 = `frameLayout -p $column -collapsable false -label "Orient Centers"`;
					string $row3 = `rowLayout -p $frame3 -numberOfColumns 1`;
						$GetRotField = `intField -p $row3 -minValue 0 -maxValue 1 -value 0`;
				string $buttonRow = `rowLayout -p $column  -numberOfColumns 1`;
					string $activateButton = `button -p $buttonRow -l "Get Centers" -c "CallFunc();"`;
		showWindow $window;
	}
	
	OpenWindow();
	
	
}